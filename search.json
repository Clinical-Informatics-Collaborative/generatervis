[{"path":"https://clinical-informatics-collaborative.github.io/generatervis/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 generatervis authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jyoti Bhogal. Maintainer.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"c) (2025). generatervis: Generate visualise synthetic Whole Genome Sequence data. R package version 0.1.0, https://clinical-informatics-collaborative.github.io/generatervis/.","code":"@Manual{,   title = {generatervis: Generate and visualise synthetic Whole Genome Sequence data},   author = {{c)}},   year = {2025},   note = {R package version 0.1.0},   url = {https://clinical-informatics-collaborative.github.io/generatervis/}, }"},{"path":[]},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Generate and visualise synthetic Whole Genome Sequence data","text":"generatervis package provides functions create empty .fastq files, generate random reads, fill raw .fastq files random reads, plot .fastq sequences, convert .fastq files BAM files, convert BAM files VCF files, create metadata files patient IDs.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/index.html","id":"id_️-installing-generatervis","dir":"","previous_headings":"","what":"⬇️ Installing generatervis","title":"Generate and visualise synthetic Whole Genome Sequence data","text":"can install development version generatervis GitHub ","code":"# install.packages(\"pak\")   pak::pak(\"Clinical-Informatics-Collaborative/generatervis\")   #>  #> → Will update 1 package. #> → The package (0 B) is cached. #> + generatervis 0.1.0 → 0.1.0 👷🏿‍♂️🔧 (GitHub: e0f8fc8) #> ℹ No downloads are needed, 1 pkg is cached #> ✔ Installed generatervis 0.1.0 (github::Clinical-Informatics-Collaborative/generatervis@e0f8fc8) (25ms) #> ✔ 1 pkg: upd 1 [2.9s]"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Generate and visualise synthetic Whole Genome Sequence data","text":"Create empty raw .fastq file specified patient. Generate random sample reads Whole Genome Sequencing (WGS) dataset specified patient ID. Populate .fastq file random reads. (Optional) Plot nucleotide sequences .fastq file grid format. Convert (raw) .fastq file (processed) .bam file using dummy .sam format. create corresponding .bam file, use samtools command-line tool. Convert (processed) .bam file (summarised) .vcf file format. Create metadata files upload data_storage_repository metadata .txt files ready, can uploaded data_storarge_repository forking repository creating pull request.","code":"patient_id <- \"patient_123\" generatervis::create_empty_fastq(patient_id) n <- 2 generatervis::rreads(patient_id, n) output_dir <- tempdir() read_length <- 8 generatervis::fill_fastq(patient_id, output_dir, n, read_length) generatervis::fastq_plot(patient_id, output_dir, n, read_length) fastq_file <- file.path(output_dir, paste0(patient_id, \".fastq\")) generatervis::fill_fastq(patient_id, output_dir, n, read_length) generatervis::fastq_to_bam(fastq_file, patient_id, output_dir, sam_file = paste0(output_dir, \"/\", patient_id, \".sam\"), reference = \"chr1\") # samtools view -Sb path_to/file_name.sam > path_to/file_name.bam generatervis::bam_to_vcf(patient_id, output_dir, vcf_file = paste0(output_dir, \"/\", patient_id, \".vcf\")) generatervis::create_metadata(patient_id, output_dir)"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Generate and visualise synthetic Whole Genome Sequence data","text":"can find detailed documentation tutorials package website: https://clinical-informatics-collaborative.github.io/generatervis/ Reference manual: Full list functions detailed descriptions. -session help:","code":"# View documentation for a specific function ?create_empty_fastq"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Generate and visualise synthetic Whole Genome Sequence data","text":"added.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Generate and visualise synthetic Whole Genome Sequence data","text":"added.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Generate and visualise synthetic Whole Genome Sequence data","text":"added.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Generate and visualise synthetic Whole Genome Sequence data","text":"added.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Generate and visualise synthetic Whole Genome Sequence data","text":"package written part volunteer programme Research Computing Program, Walter Eliza Hall Institute Medical Research, mentored Rowland Mosbergen.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/bam_to_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert `.bam`-like data to VCF format — bam_to_vcf","title":"Convert `.bam`-like data to VCF format — bam_to_vcf","text":"function simulates conversion `.bam`-like data VCF format. creates dummy VCF file dummy data.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/bam_to_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert `.bam`-like data to VCF format — bam_to_vcf","text":"","code":"bam_to_vcf(   patient_id,   output_dir = tempdir(),   vcf_file = paste0(output_dir, \"/\", patient_id, \".vcf\") )"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/bam_to_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert `.bam`-like data to VCF format — bam_to_vcf","text":"patient_id character string specifying patient ID. used base name output `.vcf` file. output_dir character string specifying directory `.vcf` file saved. vcf_file character string specifying path output `.vcf` file. Default \"dummy.vcf\".","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/bam_to_vcf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert `.bam`-like data to VCF format — bam_to_vcf","text":"function creates dummy `.vcf` file dummy data. `.vcf` file contains following fields: - CHROM: Chromosome name - POS: Position chromosome - ID: Variant identifier (dummy value \".\") - REF: Reference allele - ALT: Alternate allele - QUAL: Quality score - dg: Total depth - gt: Genotype function writes `.vcf` file specified path.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/bam_to_vcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert `.bam`-like data to VCF format — bam_to_vcf","text":"","code":"# Convert `.bam`-like data to `.vcf` format patient_id <- \"patient_123\" output_dir <- tempdir() bam_to_vcf(patient_id, output_dir, vcf_file = paste0(output_dir, \"/\", patient_id, \".vcf\")) #> Dummy .vcf written to /tmp/Rtmp1pWgJm/patient_123.vcf"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/create_empty_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an empty .fastq file using patient ID — create_empty_fastq","title":"Create an empty .fastq file using patient ID — create_empty_fastq","text":"function creates empty FASTQ file specified patient ID. file contain single entry patient ID sequence identifier. sequence quality scores empty","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/create_empty_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an empty .fastq file using patient ID — create_empty_fastq","text":"","code":"create_empty_fastq(patient_id, output_dir = tempdir())"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/create_empty_fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an empty .fastq file using patient ID — create_empty_fastq","text":"patient_id character vector representing patient IDs. output_dir character string specifying directory FASTQ file saved.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/create_empty_fastq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an empty .fastq file using patient ID — create_empty_fastq","text":"function constructs FASTQ file following format: Line 1: Sequence ID (e.g., @patient_id) Line 2: Empty sequence Line 3: Separator (e.g., +) Line 4: Empty quality scores","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/create_empty_fastq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an empty .fastq file using patient ID — create_empty_fastq","text":"","code":"# Create an empty FASTQ file for patient ID \"patient_123\"  create_empty_fastq(\"patient_123\") #> Empty FASTQ file created at: /tmp/Rtmp1pWgJm/patient_123.fastq  # Create an empty FASTQ file for patient ID \"patient_456\" in a specific directory  create_empty_fastq(\"patient_456\", output_dir = tempdir()) #> Empty FASTQ file created at: /tmp/Rtmp1pWgJm/patient_456.fastq"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/create_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create metadata for cBioPortal study — create_metadata","title":"Create metadata for cBioPortal study — create_metadata","text":"function creates directory structure metadata files cBioPortal study. generates clinical patient data, mutation data, associated metadata files. function creates directory named \"cbioportal_study\" writes following files:","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/create_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create metadata for cBioPortal study — create_metadata","text":"","code":"create_metadata(   patient_id,   output_dir = paste0(tempdir(), \"/cbioportal_study\") )"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/create_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create metadata for cBioPortal study — create_metadata","text":"patient_id vector patient IDs included clinical data. output_dir directory metadata files created. Default \"/cbioportal_study\" `tempdir()`.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/create_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create metadata for cBioPortal study — create_metadata","text":"- data_clinical_patient.txt: Contains clinical patient data. - meta_clinical_patient.txt: Metadata clinical patient data. - meta_study.txt: Metadata study. - data_mutations.txt: Contains mutation data. - meta_mutations.txt: Metadata mutation data.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/create_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create metadata for cBioPortal study — create_metadata","text":"","code":"# create_metadata(patient_id, output_dir)"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fastq_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"fastq_plot — fastq_plot","title":"fastq_plot — fastq_plot","text":"Function plot nucleotide sequences raw `.fastq` file grid format","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fastq_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fastq_plot — fastq_plot","text":"","code":"fastq_plot(patient_id, output_dir = tempdir(), n, read_length)"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fastq_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fastq_plot — fastq_plot","text":"patient_id character string representing patient ID. output_dir character string specifying directory plot file saved. n integer specifying number reads plot. read_length integer specifying length read. multiple 4. Default 8.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fastq_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fastq_plot — fastq_plot","text":"function reads FASTQ file plots sequences grid format. base represented different color: : Green T: Red G: Blue C: Orange N: Gray plot saved PNG file specified output directory.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fastq_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fastq_plot — fastq_plot","text":"","code":"# Plot FASTQ sequences for patient ID \"patient_123\" with 2 reads of length 8 fastq_plot(\"patient_123\", output_dir = tempdir(), n = 2, read_length = 8) #> Plot saved to: /tmp/Rtmp1pWgJm/fastq_plot_patient_123.png"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fastq_to_bam.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert FASTQ to BAM — fastq_to_bam","title":"Convert FASTQ to BAM — fastq_to_bam","text":"function converts FASTQ file BAM file using dummy SAM format. reads FASTQ file, extracts sequence identifiers sequences, creates dummy SAM file.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fastq_to_bam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert FASTQ to BAM — fastq_to_bam","text":"","code":"fastq_to_bam(   fastq_file,   patient_id,   output_dir = tempdir(),   sam_file = paste0(output_dir, \"/\", patient_id, \".sam\"),   reference = \"chr1\" )"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fastq_to_bam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert FASTQ to BAM — fastq_to_bam","text":"fastq_file character string specifying path `.fastq` file. patient_id character string specifying patient ID. used base name output SAM file. output_dir character string specifying directory output SAM file saved. Default temporary directory. sam_file character string specifying path output SAM file. reference character string specifying reference sequence name. Default \"chr1\".","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fastq_to_bam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert FASTQ to BAM — fastq_to_bam","text":"function reads FASTQ file extracts sequence identifiers sequences. creates dummy SAM file following fields: - QNAME: Query name (read identifier) - FLAG: Bitwise flag (0 unmapped) - RNAME: Reference sequence name - POS: Position reference sequence - MAPQ: Mapping quality (255 unmapped) - CIGAR: CIGAR string (length sequence) - RNEXT: Reference name next read (dummy value \"*\") - PNEXT: Position next read (dummy value 0) - TLEN: Template length (dummy value 0) - SEQ: Sequence - QUAL: Quality scores","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fastq_to_bam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert FASTQ to BAM — fastq_to_bam","text":"","code":"# Convert a FASTQ file to a BAM file output_dir <- tempdir() n <- 2 read_length <- 8 patient_id <- \"patient_123\" fastq_file <- file.path(output_dir, paste0(patient_id, \".fastq\")) fill_fastq(patient_id, output_dir, n, read_length) #> File already exists. Appending reads to the existing file. #> Populated /tmp/Rtmp1pWgJm/patient_123.fastq with 2 reads. sam_file <- paste0(output_dir, \"/\", patient_id, \".sam\") fastq_to_bam(fastq_file, patient_id, output_dir, sam_file) #> Dummy .sam file written to: /tmp/Rtmp1pWgJm/patient_123.sam"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fill_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to fill a FASTQ file with random reads — fill_fastq","title":"Function to fill a FASTQ file with random reads — fill_fastq","text":"function populates FASTQ file random reads given patient ID. function first creates empty FASTQ file using patient ID, generates specified number random reads, writes file.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fill_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to fill a FASTQ file with random reads — fill_fastq","text":"","code":"fill_fastq(patient_id, output_dir = tempdir(), n, read_length)"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fill_fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to fill a FASTQ file with random reads — fill_fastq","text":"patient_id character string representing patient ID. output_dir character string specifying directory `.fastq` file saved. n integer specifying number reads generate. read_length integer specifying length read. multiple 4. Default 8.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fill_fastq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to fill a FASTQ file with random reads — fill_fastq","text":"function first checks FASTQ file already exists. , appends new reads existing file. , creates new file. generated reads FASTQ format, consists four lines per read: Line 1: Sequence identifier (e.g., @patient_id_read1) Line 2: Random DNA sequence Line 3: Separator (e.g., +) Line 4: Quality scores","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/fill_fastq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to fill a FASTQ file with random reads — fill_fastq","text":"","code":"# Fill a FASTQ file for patient ID \"patient_123\" with 2 reads of length 8 fill_fastq(\"patient_123\",output_dir = tempdir(), n = 2, read_length = 8) #> File already exists. Appending reads to the existing file. #> Populated /tmp/Rtmp1pWgJm/patient_123.fastq with 2 reads."},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/rreads.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to generate a random sample of reads in FASTQ format — rreads","title":"Function to generate a random sample of reads in FASTQ format — rreads","text":"function generates specified number random reads FASTQ format. read consists sequence identifier, random DNA sequence, separator line, quality scores.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/rreads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to generate a random sample of reads in FASTQ format — rreads","text":"","code":"rreads(patient_id, n, read_length = 8)"},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/rreads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to generate a random sample of reads in FASTQ format — rreads","text":"patient_id character string representing patient ID. n integer specifying number reads generate. read_length integer specifying length read. multiple 4. Default 8.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/rreads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to generate a random sample of reads in FASTQ format — rreads","text":"character vector containing generated FASTQ lines.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/rreads.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to generate a random sample of reads in FASTQ format — rreads","text":"function generates random DNA sequences using nucleotides , T, G, C. quality scores represented ASCII characters, '' indicating high quality. output formatted FASTQ file, consists four lines per read: Line 1: Sequence identifier (e.g., @patient_id_read1) Line 2: Random DNA sequence Line 3: Separator (e.g., +) Line 4: Quality scores @seealso  create_empty_fastq creating empty FASTQ file.","code":""},{"path":"https://clinical-informatics-collaborative.github.io/generatervis/reference/rreads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to generate a random sample of reads in FASTQ format — rreads","text":"","code":"# Generate 5 random reads for patient ID \"patient_123\" rreads(\"patient_123\", n = 5) #>  [1] \"@patient_123_read1\" \"CCTGATGG\"           \"+\"                  #>  [4] \"IIIIIIII\"           \"@patient_123_read2\" \"CATATGTC\"           #>  [7] \"+\"                  \"IIIIIIII\"           \"@patient_123_read3\" #> [10] \"ATACCTGA\"           \"+\"                  \"IIIIIIII\"           #> [13] \"@patient_123_read4\" \"TTGTAAGT\"           \"+\"                  #> [16] \"IIIIIIII\"           \"@patient_123_read5\" \"ACACCGCC\"           #> [19] \"+\"                  \"IIIIIIII\"           # Generate 10 random reads for patient ID \"patient_456\" with a read length of 12 rreads(\"patient_456\", n = 10, read_length = 12) #>  [1] \"@patient_456_read1\"  \"CGTGTGTGTCTA\"        \"+\"                   #>  [4] \"IIIIIIIIIIII\"        \"@patient_456_read2\"  \"GTTGATCCACAG\"        #>  [7] \"+\"                   \"IIIIIIIIIIII\"        \"@patient_456_read3\"  #> [10] \"CTATTTGCTCTT\"        \"+\"                   \"IIIIIIIIIIII\"        #> [13] \"@patient_456_read4\"  \"AGGCAAAATAAA\"        \"+\"                   #> [16] \"IIIIIIIIIIII\"        \"@patient_456_read5\"  \"TCAGGACGGCTC\"        #> [19] \"+\"                   \"IIIIIIIIIIII\"        \"@patient_456_read6\"  #> [22] \"AGAGATAAAAGA\"        \"+\"                   \"IIIIIIIIIIII\"        #> [25] \"@patient_456_read7\"  \"TGCGCTATTGCG\"        \"+\"                   #> [28] \"IIIIIIIIIIII\"        \"@patient_456_read8\"  \"CATCACGACAGG\"        #> [31] \"+\"                   \"IIIIIIIIIIII\"        \"@patient_456_read9\"  #> [34] \"ATGCGGTCTACC\"        \"+\"                   \"IIIIIIIIIIII\"        #> [37] \"@patient_456_read10\" \"GTCTATATGCAT\"        \"+\"                   #> [40] \"IIIIIIIIIIII\""}]
